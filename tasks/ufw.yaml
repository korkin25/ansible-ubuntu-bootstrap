---

- name: Ensure UFW is installed
  ansible.builtin.apt:
    name: ufw
    state: present
  become: true
  tags: ufw

- name: Reset UFW to default settings
  community.general.ufw:
    state: reset
  become: true
  tags: ufw

- name: Set default UFW policies
  community.general.ufw:
    direction: incoming
    policy: deny
  become: true
  tags: ufw

- name: Debug open_ports
  ansible.builtin.debug:
    msg: "{{ open_ports }}"
  when: open_ports is defined
  tags: ufw

- name: Convert open_ports to ufw_rules format
  ansible.builtin.set_fact:
    open_ports_rules: "{{ open_ports | map('regex_replace', '^(\\d+)/(tcp|udp)$', '{\"rule\": \"allow\", \"port\": \"\\1\", \"proto\": \"\\2\"}') | map('from_yaml') | list }}"
  when: open_ports is defined
  tags: ufw

- name: Debug open_ports_rules
  ansible.builtin.debug:
    msg: "{{ open_ports_rules }}"
  when: open_ports is defined
  tags: ufw

- name: Debug ufw_rules
  ansible.builtin.debug:
    msg: "{{ ufw_rules }}"
  when: ufw_rules is defined
  tags: ufw

- name: Combine open_ports and ufw_rules
  ansible.builtin.set_fact:
    combined_ufw_rules: "{{ open_ports_rules | default([]) + (ufw_rules | default([])) }}"
  tags: ufw

- name: Debug combined_ufw_rules
  ansible.builtin.debug:
    msg: "{{ combined_ufw_rules }}"
  tags: ufw

- name: Apply UFW rules from combined_ufw_rules
  community.general.ufw:
    rule: "{{ item.rule }}"
    src: "{{ item.src | default(omit) }}"
    dest: "{{ item.to | default(omit) }}"
    port: "{{ item.port | default(omit) }}"
    proto: "{{ item.proto | default(omit) }}"
  loop: "{{ combined_ufw_rules }}"
  become: true
  tags: ufw

- name: Enable UFW
  community.general.ufw:
    state: enabled
  become: true
  tags: ufw
